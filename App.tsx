/**
 * =====================================================================================
 * ГЛАВНЫЙ КОМПОНЕНТ TELEGRAM MINI APP - МНОГОСТРАНИЧНЫЙ ОНБОРДИНГ
 * =====================================================================================
 * 
 * Этот файл является точкой входа в приложение Telegram Mini App под названием "Menhausen".
 * Приложение представляет собой платформу для отслеживания ментального здоровья и 
 * предоставления психологической поддержки.
 * 
 * АРХИТЕКТУРА ПРИЛОЖЕНИЯ:
 * ----------------------
 * Приложение состоит из трех основных страниц:
 * 1. Страница онбординга/приветствия (индекс 0)
 * 2. Страница опроса о проблемах пользователя (индекс 1)
 * 3. Главная страница с функционалом приложения (индекс 2)
 * 
 * ОСОБЕННОСТИ РЕАЛИЗАЦИИ:
 * ----------------------
 * - Использует React hooks для управления состоянием
 * - Адаптирован для Telegram Mini App формата
 * - Поддерживает сенсорное управление для мобильных устройств
 * - Включает прогресс-индикаторы и навигационные элементы
 * - Интегрирует импортированные дизайны из Figma
 * 
 * СТЕК ТЕХНОЛОГИЙ:
 * ---------------
 * - React 18 с TypeScript
 * - Tailwind CSS v4 для стилизации
 * - SVG графика для иконок и эффектов
 * - Адаптивный дизайн для мобильных устройств
 * 
 * @author AI Assistant
 * @version 3.0
 * @created 2024
 * @lastModified 2024-12-28
 */

// =====================================================================================
// ИМПОРТЫ И ЗАВИСИМОСТИ
// =====================================================================================

/**
 * Импорт React хука для управления состоянием компонента
 * useState используется для:
 * - Отслеживания текущей активной страницы
 * - Хранения выбранных пользователем проблем в опросе
 * - Управления навигацией между страницами
 */
import { useState } from 'react';
import { useI18n } from './src/hooks/useI18n';
import { CompactLanguageSwitcher } from './components/LanguageSwitcher';

/**
 * Импорт компонентов страниц, созданных из импортированных Figma дизайнов
 * 
 * Каждый компонент представляет собой страницу приложения:
 * - Component002OnboardingPage01: Страница приветствия с онбордингом
 * - Component003SurveyPageTemplate: Базовый шаблон опроса (не используется напрямую)
 * - Component004HomeMainPage: Главная страница с полным функционалом приложения
 */
import Component002OnboardingPage01 from './imports/002OnboardingPage01'; // Первая страница онбординга (приветствие)
import Component004HomeMainPage from './imports/004HomeMainPage'; // Главная страница приложения

/**
 * =====================================================================================
 * ОСНОВНОЙ КОМПОНЕНТ ПРИЛОЖЕНИЯ
 * =====================================================================================
 * 
 * Главный компонент приложения Telegram Mini App с многостраничным онбордингом.
 * 
 * СТРУКТУРА СТРАНИЦ:
 * -----------------
 * - Страница 0: Онбординг/приветствие с кнопкой "Next"
 * - Страница 1: Интерактивный опрос о проблемах с множественным выбором
 * - Страница 2: Главная страница с полным функционалом приложения
 * 
 * ОСОБЕННОСТИ НАВИГАЦИИ:
 * ----------------------
 * - Линейная навигация только вперед (без возможности пропуска)
 * - Визуальные индикаторы прогресса для первых двух страниц
 * - Интерактивные кнопки навигации с hover эффектами
 * - Адаптация под размеры экрана мобильных устройств
 * 
 * @returns {JSX.Element} Корневой JSX элемент приложения
 */
export default function App() {
  // =====================================================================================
  // СОСТОЯНИЯ ПРИЛОЖЕНИЯ (STATE MANAGEMENT)
  // =====================================================================================
  
  // Инициализация i18n
  const { t, isReady } = useI18n();
  
  // Показать загрузку пока i18n не готов
  if (!isReady) {
    return (
      <div className="h-screen w-full max-w-md mx-auto bg-[#111111] flex items-center justify-center">
        <div className="text-[#E1FF00] text-lg">{t('app.loading')}</div>
      </div>
    );
  }
  
  /**
   * Текущая активная страница приложения
   * 
   * ЗНАЧЕНИЯ:
   * ---------
   * 0 - Страница онбординга/приветствия
   * 1 - Страница опроса о проблемах пользователя  
   * 2 - Главная страница приложения
   * 
   * УПРАВЛЕНИЕ:
   * -----------
   * Изменяется через функции handleNext() и handleBack()
   * Используется в условном рендеринге для показа нужной страницы
   * Влияет на отображение индикаторов прогресса
   * 
   * @type {number}
   * @default 0
   */
  const [currentPage, setCurrentPage] = useState(0);
  
  /**
   * Массив выбранных пользователем проблем в опросе
   * 
   * НАЗНАЧЕНИЕ:
   * -----------
   * Собирает информацию о том, какие проблемы беспокоят пользователя
   * Используется для персонализации контента в главном приложении
   * Сохраняется на протяжении всей сессии пользователя
   * 
   * СТРУКТУРА ДАННЫХ:
   * ----------------
   * Массив строк, где каждая строка - название проблемы
   * Примеры: ['Stress', 'Depression', 'Anxiety']
   * 
   * ОПЕРАЦИИ:
   * ---------
   * - Добавление: при выборе новой проблемы
   * - Удаление: при повторном клике на выбранную проблему
   * - Чтение: при завершении опроса для показа итогов
   * 
   * @type {string[]}
   * @default []
   */
  const [selectedConcerns, setSelectedConcerns] = useState<string[]>([]);

  // =====================================================================================
  // КОНСТАНТЫ И КОНФИГУРАЦИЯ ПРИЛОЖЕНИЯ
  // =====================================================================================

  /**
   * Список доступных проблем для выбора в опросе
   * 
   * ИСТОЧНИК ДАННЫХ:
   * ---------------
   * Эти варианты соответствуют темам, представленным в главном приложении
   * Синхронизированы с карточками тем на главной странице
   * 
   * СТРУКТУРА:
   * ----------
   * Каждый элемент массива представляет отдельную категорию проблем
   * Названия должны точно совпадать с названиями в главном приложении
   * 
   * ИСПОЛЬЗОВАНИЕ:
   * -------------
   * - Рендеринг интерактивных элементов опроса
   * - Валидация выбранных пользователем опций
   * - Синхронизация с контентом главной страницы
   * 
   * @type {string[]}
   * @readonly
   */
  const concerns = [
    'Stress',           // Стресс - наиболее распространенная проблема
    'Depression',       // Депрессия - серьезное психическое расстройство
    'Anger',           // Гнев - проблемы с управлением эмоциями
    'Sadness and apathy', // Грусть и апатия - эмоциональное выгорание
    'Anxiety',         // Тревожность - беспокойство и страхи
    'Relationships'    // Отношения - проблемы в межличностном общении
  ];

  // =====================================================================================
  // ОБРАБОТЧИКИ НАВИГАЦИИ (NAVIGATION HANDLERS)
  // =====================================================================================

  /**
   * Обработчик перехода на следующую страницу
   * 
   * ЛОГИКА РАБОТЫ:
   * -------------
   * 1. Проверяет, не находимся ли мы уже на последней странице
   * 2. Если нет, увеличивает значение currentPage на 1
   * 3. Автоматически перерисовывает интерфейс для новой страницы
   * 
   * ОГРАНИЧЕНИЯ:
   * -----------
   * - Максимальная страница: 2 (индекс страницы)
   * - Не работает, если уже на последней странице
   * - Не пропускает страницы (строгая последовательность)
   * 
   * ПОБОЧНЫЕ ЭФФЕКТЫ:
   * ----------------
   * - Изменение отображаемого контента
   * - Обновление индикаторов прогресса
   * - Потенциальная потеря состояния предыдущей страницы
   * 
   * @function
   * @returns {void}
   */
  const handleNext = () => {
    // Проверяем, что мы не на последней странице (индекс 2)
    if (currentPage < 2) {
      // Переходим на следующую страницу
      setCurrentPage(currentPage + 1);
      
      // Логирование для отладки (в production следует убрать)
      console.log(`Navigating to page ${currentPage + 1}`);
    } else {
      // Предупреждение о попытке выйти за пределы приложения
      console.warn('Already on the last page, cannot navigate further');
    }
  };

  /**
   * Обработчик возврата на предыдущую страницу
   * 
   * ЛОГИКА РАБОТЫ:
   * -------------
   * 1. Проверяет, не находимся ли мы уже на первой странице
   * 2. Если нет, уменьшает значение currentPage на 1
   * 3. Автоматически перерисовывает интерфейс для предыдущей страницы
   * 
   * ОГРАНИЧЕНИЯ:
   * -----------
   * - Минимальная страница: 0 (индекс страницы)
   * - Не работает, если уже на первой странице
   * - Может потребовать восстановления состояния предыдущей страницы
   * 
   * ВАРИАНТЫ ИСПОЛЬЗОВАНИЯ:
   * ----------------------
   * - Исправление ошибок в опросе
   * - Возврат для изменения выбора
   * - Навигация по уже пройденным страницам
   * 
   * @function
   * @returns {void}
   */
  const handleBack = () => {
    // Проверяем, что мы не на первой странице (индекс 0)
    if (currentPage > 0) {
      // Возвращаемся на предыдущую страницу
      setCurrentPage(currentPage - 1);
      
      // Логирование для отладки
      console.log(`Navigating back to page ${currentPage - 1}`);
    } else {
      // Предупреждение о попытке выйти за пределы приложения
      console.warn('Already on the first page, cannot navigate back');
    }
  };

  // =====================================================================================
  // ОБРАБОТЧИКИ ОПРОСА (SURVEY HANDLERS)
  // =====================================================================================

  /**
   * Переключение выбора проблемы в опросе (toggle functionality)
   * 
   * АЛГОРИТМ РАБОТЫ:
   * ---------------
   * 1. Проверяет, есть ли проблема в текущем списке выбранных
   * 2. Если есть: удаляет её из списка (деселекция)
   * 3. Если нет: добавляет в список (селекция)
   * 4. Обновляет состояние selectedConcerns
   * 
   * ОСОБЕННОСТИ РЕАЛИЗАЦИИ:
   * ----------------------
   * - Использует функциональное обновление состояния для избежания race conditions
   * - Применяет иммутабельные операции (filter, spread operator)
   * - Поддерживает множественный выбор без ограничений
   * 
   * ОПЕРАЦИИ С МАССИВОМ:
   * -------------------
   * - Проверка наличия: Array.prototype.includes()
   * - Удаление элемента: Array.prototype.filter()
   * - Добавление элемента: spread operator [...]
   * 
   * ПРОИЗВОДИТЕЛЬНОСТЬ:
   * ------------------
   * - O(n) сложность для поиска и фильтрации
   * - Для больших списков можно оптимизировать с помощью Set
   * - Минимальные ререндеры благодаря правильному управлению состоянием
   * 
   * @param {string} concern - название проблемы для переключения
   * @function
   * @returns {void}
   */
  const toggleConcern = (concern: string) => {
    // Используем функциональное обновление состояния для безопасности
    setSelectedConcerns(previousConcerns => {
      // Проверяем, была ли проблема уже выбрана
      const isCurrentlySelected = previousConcerns.includes(concern);
      
      if (isCurrentlySelected) {
        // Деселекция: удаляем проблему из списка
        const updatedConcerns = previousConcerns.filter(item => item !== concern);
        
        // Логирование деселекции
        console.log(`Deselected concern: ${concern}`, updatedConcerns);
        
        return updatedConcerns;
      } else {
        // Селекция: добавляем проблему в список
        const updatedConcerns = [...previousConcerns, concern];
        
        // Логирование селекции
        console.log(`Selected concern: ${concern}`, updatedConcerns);
        
        return updatedConcerns;
      }
    });
  };

  // =====================================================================================
  // КОМПОНЕНТЫ РЕНДЕРИНГА (RENDERING COMPONENTS)
  // =====================================================================================

  /**
   * Рендеринг интерактивного элемента опроса для каждой проблемы
   * 
   * НАЗНАЧЕНИЕ:
   * -----------
   * Создает кликабельную кнопку с визуальной индикацией выбора для каждой проблемы.
   * Обеспечивает интуитивно понятный интерфейс для множественного выбора.
   * 
   * ВИЗУАЛЬНЫЕ СОСТОЯНИЯ:
   * --------------------
   * - Не выбрано: серый кружок, белый текст
   * - Выбрано: желтый кружок с внутренней точкой, желтый текст
   * - Hover: изменение прозрачности для обратной связи
   * 
   * СТРУКТУРА ЭЛЕМЕНТА:
   * ------------------
   * 1. Кнопка-контейнер с обработчиком клика
   * 2. SVG индикатор с динамической стилизацией
   * 3. Текстовый лейбл с адаптивной окраской
   * 
   * ACCESSIBILITY:
   * -------------
   * - Использует семантическую кнопку для кликабельности
   * - Поддерживает навигацию с клавиатуры
   * - Визуальная обратная связь при взаимодействии
   * 
   * @param {string} concern - название проблемы для рендеринга
   * @returns {JSX.Element} JSX элемент интерактивного элемента опроса
   * @function
   */
  const renderInteractiveSurveyItem = (concern: string) => {
    // Определяем состояние выбора для текущей проблемы
    const isSelected = selectedConcerns.includes(concern);
    
    // Определяем цвета в зависимости от состояния
    const indicatorColor = isSelected ? "#E1FF00" : "#8E8E8E"; // Желтый или серый
    const textColor = isSelected ? 'text-[#e1ff00]' : 'text-[#ffffff]'; // Желтый или белый
    
    return (
      <button
        key={concern} // Уникальный ключ для оптимизации React рендеринга
        onClick={() => toggleConcern(concern)} // Обработчик переключения
        className="box-border content-stretch flex flex-row gap-2.5 items-center justify-start p-0 relative shrink-0 w-[331px] hover:opacity-80 transition-opacity duration-200"
        aria-pressed={isSelected} // ARIA атрибут для screen readers
        aria-label={`${isSelected ? 'Убрать' : 'Выбрать'} проблему: ${concern}`}
      >
        {/* === ВИЗУАЛЬНЫЙ ИНДИКАТОР ВЫБОРА === */}
        {/* 
          SVG элемент, показывающий состояние выбора:
          - Внешний круг всегда отображается
          - Внутренняя точка появляется только при выборе
          - Цвета динамически изменяются
        */}
        <div className="relative shrink-0 size-3.5">
          <svg
            className="block size-full"
            fill="none"
            preserveAspectRatio="none"
            viewBox="0 0 14 14"
            role="img"
            aria-hidden="true" // Декоративный элемент, не читается screen readers
          >
            {/* Внешний круг - обводка индикатора */}
            <circle
              cx="7"
              cy="7"
              r="6"
              stroke={indicatorColor} // Динамический цвет на основе состояния
              strokeWidth="2"
              fill="none"
            />
            {/* Внутренняя точка - показывается только при выборе */}
            {isSelected && (
              <circle
                cx="7"
                cy="7"
                r="3"
                fill={indicatorColor} // Заливка того же цвета, что и обводка
              />
            )}
          </svg>
        </div>
        
        {/* === ТЕКСТОВЫЙ ЛЕЙБЛ === */}
        {/* 
          Название проблемы с динамической окраской:
          - Желтый цвет при выборе (соответствует брендингу)
          - Белый цвет в обычном состоянии (для контраста на темном фоне)
        */}
        <div className={`font-['PT_Sans:Regular',_sans-serif] leading-[0] not-italic relative shrink-0 text-[20px] text-left w-[307px] ${textColor}`}>
          <p className="block leading-none">{concern}</p>
        </div>
      </button>
    );
  };

  // =====================================================================================
  // ОСНОВНОЙ РЕНДЕРИНГ ПРИЛОЖЕНИЯ (MAIN RENDER)
  // =====================================================================================

  return (
    /**
     * Корневой контейнер приложения
     * 
     * СТИЛИЗАЦИЯ:
     * ----------
     * - h-screen: полная высота экрана для мобильных устройств
     * - w-full: полная ширина контейнера
     * - max-w-md: ограничение максимальной ширины для десктопа
     * - mx-auto: центрирование по горизонтали
     * - relative: позиционирование для дочерних абсолютных элементов
     * - overflow-hidden: предотвращение скроллинга за пределы контейнера
     * 
     * АДАПТИВНОСТЬ:
     * ------------
     * Контейнер адаптируется под размеры Telegram Mini App
     * Оптимизирован для мобильных устройств
     * Поддерживает различные плотности экрана
     */
    <div className="h-screen w-full max-w-md mx-auto relative overflow-hidden">
      
      {/* =====================================================================================
          СТРАНИЦА 0: ОНБОРДИНГ/ПРИВЕТСТВИЕ
          ===================================================================================== */}
      {currentPage === 0 && (
        <div className="h-full w-full relative">
          {/* === ПЕРЕКЛЮЧАТЕЛЬ ЯЗЫКА === */}
          <div className="absolute top-4 right-4 z-10">
            <CompactLanguageSwitcher />
          </div>
          
          {/* === ИМПОРТИРОВАННЫЙ ДИЗАЙН ИЗ FIGMA === */}
          {/* 
            Компонент онбординга, созданный из Figma дизайна
            Содержит:
            - Фоновые световые эффекты
            - Логотип приложения
            - Приветственный текст
            - Статические элементы интерфейса
          */}
          <Component002OnboardingPage01 />
          
          {/* === ПЕРЕОПРЕДЕЛЕННАЯ ИНТЕРАКТИВНАЯ КНОПКА === */}
          {/* 
            Кастомная кнопка "Next" поверх импортированного дизайна
            Причина переопределения: необходимость добавления функциональности
            
            ПОЗИЦИОНИРОВАНИЕ:
            - absolute: абсолютное позиционирование поверх дизайна
            - left/top: точные координаты из Figma макета
            - w/h: размеры, соответствующие оригинальному дизайну
            
            ИНТЕРАКТИВНОСТЬ:
            - onClick: обработчик перехода на следующую страницу
            - hover: изменение цвета фона при наведении
            - active: эффект нажатия (уменьшение размера)
          */}
          <button
            onClick={handleNext}
            className="absolute bg-[#e1ff00] box-border content-stretch flex flex-row gap-2.5 h-[46px] items-center justify-center left-[23px] px-[126px] py-[15px] rounded-xl top-[758px] w-[350px] hover:bg-[#d1ef00] transition-colors duration-200 active:scale-95"
            aria-label={t('navigation.next')}
          >
            <div className="font-['PT_Sans:Bold',_sans-serif] leading-[0] not-italic relative shrink-0 text-[#424040] text-[15px] text-center text-nowrap tracking-[-0.43px]">
              <p className="adjustLetterSpacing block leading-[16px] whitespace-pre">
                {t('navigation.next')}
              </p>
            </div>
          </button>
        </div>
      )}

      {/* =====================================================================================
          СТРАНИЦА 1: ОПРОС О ПРОБЛЕМАХ ПОЛЬЗОВАТЕЛЯ
          ===================================================================================== */}
      {currentPage === 1 && (
        <div className="h-full w-full relative">
          {/* === ПЕРЕКЛЮЧАТЕЛЬ ЯЗЫКА === */}
          <div className="absolute top-4 right-4 z-10">
            <CompactLanguageSwitcher />
          </div>
          
          {/* 
            КАСТОМНАЯ РЕАЛИЗАЦИЯ СТРАНИЦЫ ОПРОСА
            
            Почему не используем импортированный шаблон:
            - Необходимость интерактивности (множественный выбор)
            - Динамическое управление состоянием
            - Кастомная логика валидации и обработки
            
            Дизайн основан на импортированном шаблоне, но с функциональными элементами
          */}
          <div className="bg-[#111111] relative size-full">
            
            {/* === ФОНОВЫЕ СВЕТОВЫЕ ЭФФЕКТЫ === */}
            {/* 
              Точная копия эффектов из Figma макета
              Создает атмосферу и брендинг приложения
              
              ТЕХНИЧЕСКИЕ ДЕТАЛИ:
              - SVG градиенты с фильтрами размытия
              - Полупрозрачные элементы для мягкого свечения
              - Позиционированы за основным контентом
            */}
            <div className="absolute h-[917px] left-1/2 top-[-65px] translate-x-[-50%] w-[211px]">
              <div className="absolute bottom-[-27.808%] left-[-120.853%] right-[-120.853%] top-[-27.808%]">
                <svg
                  className="block size-full"
                  fill="none"
                  preserveAspectRatio="none"
                  viewBox="0 0 721 1427"
                >
                  {/* Верхний световой эффект */}
                  <g filter="url(#filter0_f_1_843)">
                    <ellipse
                      cx="361.5"
                      cy="320"
                      fill="#999999"
                      fillOpacity="0.3"
                      rx="92.5"
                      ry="65"
                    />
                  </g>
                  {/* Нижний световой эффект */}
                  <g filter="url(#filter1_f_1_843)">
                    <ellipse
                      cx="360.5"
                      cy="1113.5"
                      fill="#999999"
                      fillOpacity="0.3"
                      rx="105.5"
                      ry="58.5"
                    />
                  </g>
                  {/* Определения фильтров для эффекта размытия */}
                  <defs>
                    {/* Фильтр для верхнего свечения */}
                    <filter
                      colorInterpolationFilters="sRGB"
                      filterUnits="userSpaceOnUse"
                      height="640"
                      id="filter0_f_1_843"
                      width="695"
                      x="14"
                      y="0"
                    >
                      <feFlood floodOpacity="0" result="BackgroundImageFix" />
                      <feBlend
                        in="SourceGraphic"
                        in2="BackgroundImageFix"
                        mode="normal"
                        result="shape"
                      />
                      <feGaussianBlur
                        result="effect1_foregroundBlur_1_843"
                        stdDeviation="127.5" // Сила размытия для мягкого свечения
                      />
                    </filter>
                    {/* Фильтр для нижнего свечения */}
                    <filter
                      colorInterpolationFilters="sRGB"
                      filterUnits="userSpaceOnUse"
                      height="627"
                      id="filter1_f_1_843"
                      width="721"
                      x="0"
                      y="800"
                    >
                      <feFlood floodOpacity="0" result="BackgroundImageFix" />
                      <feBlend
                        in="SourceGraphic"
                        in2="BackgroundImageFix"
                        mode="normal"
                        result="shape"
                      />
                      <feGaussianBlur
                        result="effect1_foregroundBlur_1_843"
                        stdDeviation="127.5"
                      />
                    </filter>
                  </defs>
                </svg>
              </div>
            </div>

            {/* === МИНИ ЛОГОТИП ПРИЛОЖЕНИЯ === */}
            {/* 
              Брендинговый элемент в верхней части страницы
              Состоит из:
              - Символа-стрелки (повернутой на 180 градусов)
              - Текстового названия "Menhausen"
              
              ПОЗИЦИОНИРОВАНИЕ:
              Точно соответствует макету Figma для консистентности
            */}
            <div className="absolute h-[13px] left-[152px] top-[69px] w-[89px]">
              {/* === СИМВОЛ СТРЕЛКИ === */}
              <div className="absolute bottom-0 flex items-center justify-center left-0 right-[91.011%] top-0">
                <div className="flex-none h-[13px] rotate-[180deg] w-2">
                  <svg className="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 8 13">
                    {/* Основная стрелка */}
                    <path d="M0.159013 4.19296C-0.0530582 3.99013 -0.0529508 3.66125 0.159013 3.45836L3.61595 0.152156C3.82808 -0.0507198 4.17192 -0.0507198 4.38405 0.152156L7.84099 3.45836C8.05295 3.66125 8.05306 3.99013 7.84099 4.19296C7.62891 4.39578 7.28503 4.39568 7.07289 4.19296L4.54318 1.77355L4.54318 8.83138C4.54318 9.11829 4.29999 9.35088 4 9.35088C3.70001 9.35088 3.45682 9.11829 3.45682 8.83138L3.45682 1.77355L0.927104 4.19296C0.714966 4.39568 0.371085 4.39578 0.159013 4.19296Z" fill="#E1FF00"/>
                    {/* Горизонтальная линия */}
                    <path d="M6.25672 6.72807C6.56006 6.72807 6.80597 6.95782 6.80597 7.24123C6.80597 7.52464 6.56006 7.75438 6.25672 7.75438H1.86269C1.55934 7.75438 1.31343 7.52464 1.31343 7.24123C1.31343 6.95782 1.55934 6.72807 1.86269 6.72807H6.25672Z" fill="#E1FF00"/>
                    {/* Круг внизу */}
                    <path d="M5.10448 10.8904C5.10448 10.3078 4.60999 9.83553 4 9.83553C3.39001 9.83553 2.89552 10.3078 2.89552 10.8904C2.89552 11.4729 3.39001 11.9452 4 11.9452V13C2.78003 13 1.79104 12.0555 1.79104 10.8904C1.79104 9.72523 2.78003 8.7807 4 8.7807C5.21997 8.7807 6.20896 9.72523 6.20896 10.8904C6.20896 12.0555 5.21997 13 4 13V11.9452C4.60999 11.9452 5.10448 11.4729 5.10448 10.8904Z" fill="#E1FF00"/>
                  </svg>
                </div>
              </div>
              
              {/* === ТЕКСТОВАЯ ЧАСТЬ ЛОГОТИПА === */}
              <div className="absolute bottom-[7.2%] left-[15.488%] right-[1.172%] top-[2.215%]">
                <svg className="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 75 12">
                  {/* Буква "M" */}
                  <path d="M0.111944 11.712L-5.62668e-05 10.56L0.943944 10.4V1.98404L0.0479437 1.88804V0.656035H3.50394L6.19194 9.55204L8.83194 0.656035H12.0479L12.2079 1.88804L11.3599 2.03204V10.416L12.2399 10.56V11.712H9.08794L8.97594 10.544L9.77594 10.336V1.85604L6.91194 11.488H5.11994L2.25594 2.01604V10.384L3.11994 10.56L3.13594 11.712H0.111944Z" fill="#E3E3E3"/>
                  {/* Буква "e" */}
                  <path d="M62.9689 11.776C62.2756 11.776 61.6623 11.6214 61.1289 11.312C60.5956 11.0027 60.1743 10.56 59.8649 9.98404C59.5663 9.40804 59.4169 8.72537 59.4169 7.93604C59.4169 7.09337 59.5716 6.3787 59.8809 5.79204C60.2009 5.1947 60.6223 4.74137 61.1449 4.43204C61.6676 4.11204 62.2489 3.95204 62.8889 3.95204C63.3263 3.95204 63.7369 4.03204 64.1209 4.19204C64.5156 4.35204 64.8356 4.59204 65.0809 4.91204C65.3263 5.22137 65.4489 5.61604 65.4489 6.09604C65.4489 6.59737 65.3316 7.01337 65.0969 7.34404C64.8729 7.6747 64.5689 7.93604 64.1849 8.12804C63.8009 8.32004 63.3743 8.4587 62.9049 8.54404C62.4356 8.6187 61.9609 8.65604 61.4809 8.65604L61.0009 8.64004C61.0756 9.18404 61.2836 9.6427 61.6249 10.016C61.9663 10.3787 62.4836 10.56 63.1769 10.56C63.5929 10.56 63.9556 10.4854 64.2649 10.336C64.5849 10.1867 64.8516 10.0214 65.0649 9.84004L65.4009 10.976C65.2516 11.1147 65.0543 11.248 64.8089 11.376C64.5636 11.4934 64.2809 11.5894 63.9609 11.664C63.6516 11.7387 63.3209 11.776 62.9689 11.776ZM60.9849 7.48804L61.3849 7.50404C61.6303 7.50404 61.8969 7.48804 62.1849 7.45604C62.4836 7.42404 62.7609 7.36537 63.0169 7.28004C63.2836 7.18404 63.4969 7.04537 63.6569 6.86404C63.8276 6.67204 63.9129 6.4267 63.9129 6.12804C63.9129 5.79737 63.8063 5.55737 63.5929 5.40804C63.3796 5.2587 63.1449 5.18404 62.8889 5.18404C62.5263 5.18404 62.2063 5.2907 61.9289 5.50404C61.6516 5.7067 61.4276 5.98404 61.2569 6.33604C61.0969 6.68804 61.0063 7.07204 60.9849 7.48804Z" fill="#E3E3E3"/>
                  {/* Буква "s" */}
                  <path d="M55.5406 11.76C55.0499 11.76 54.6126 11.6747 54.2286 11.504C53.8446 11.3334 53.5299 11.12 53.2846 10.864C53.0392 10.5974 52.8579 10.3414 52.7406 10.096L54.4046 9.45604L54.8046 10.384C54.8579 10.4054 54.9539 10.4374 55.0926 10.48C55.2419 10.5227 55.4232 10.544 55.6366 10.544C55.7752 10.544 55.9246 10.512 56.0846 10.448C56.2552 10.384 56.3992 10.288 56.5166 10.16C56.6339 10.0214 56.6926 9.84004 56.6926 9.61604C56.6926 9.38137 56.6179 9.18937 56.4686 9.04004C56.3299 8.8907 56.1379 8.76804 55.8926 8.67204C55.6472 8.56537 55.3806 8.45337 55.0926 8.33604C54.4312 8.10137 53.9299 7.8027 53.5886 7.44004C53.2579 7.07737 53.0926 6.64537 53.0926 6.14404C53.0926 5.7067 53.2046 5.3227 53.4286 4.99204C53.6632 4.66137 53.9779 4.40537 54.3726 4.22404C54.7672 4.03204 55.1939 3.93604 55.6526 3.93604C56.1539 3.93604 56.5806 4.02137 56.9326 4.19204C57.2952 4.35204 57.5886 4.5547 57.8126 4.80004C58.0472 5.04537 58.2179 5.28004 58.3246 5.50404L56.6606 6.14404L56.2766 5.32804C56.2446 5.3067 56.1752 5.2747 56.0686 5.23204C55.9619 5.18937 55.8126 5.16804 55.6206 5.16804C55.4606 5.16804 55.3059 5.20004 55.1566 5.26404C55.0072 5.31737 54.8792 5.4027 54.7726 5.52004C54.6766 5.63737 54.6286 5.79204 54.6286 5.98404C54.6286 6.1867 54.7032 6.35737 54.8526 6.49604C55.0126 6.6347 55.2366 6.76804 55.5246 6.89604C55.8126 7.01337 56.1432 7.15204 56.5166 7.31204C57.0499 7.52537 57.4659 7.80804 57.7646 8.16004C58.0739 8.50137 58.2286 8.9387 58.2286 9.47204C58.2286 9.9627 58.0952 10.384 57.8286 10.736C57.5726 11.0774 57.2366 11.3334 56.8206 11.504C56.4152 11.6747 55.9886 11.76 55.5406 11.76Z" fill="#E3E3E3"/>
                </svg>
              </div>
            </div>

            {/* === ИНДИКАТОР ПРОГРЕССА === */}
            {/* 
              Визуальный индикатор текущего этапа онбординга
              
              ЛОГИКА ОТОБРАЖЕНИЯ:
              - Общая длина: 351px (100% прогресса)
              - Заполненная часть: 131.501px (~37.5% - вторая из трех страниц)
              - Цвета: серый для фона, желтый для прогресса
              
              СЕМАНТИКА:
              Показывает пользователю, что он находится на втором этапе из трех
            */}
            <div className="absolute h-0 left-[21px] top-[129px] w-[351px]">
              <div className="absolute bottom-[-3px] left-0 right-0 top-[-3px]">
                <svg className="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 351 6">
                  {/* Полная линия прогресса (фон) */}
                  <path d="M0 3H351" stroke="#303030" strokeWidth="6"/>
                  {/* Заполненная часть прогресса (текущий этап) */}
                  <path d="M0 3H131.501" stroke="#E1FF00" strokeWidth="6"/>
                </svg>
              </div>
            </div>

            {/* === ЗАГОЛОВОК И ОПИСАНИЕ ОПРОСА === */}
            {/* 
              Главный контент страницы с вопросом и инструкциями
              
              ИЕРАРХИЯ ИНФОРМАЦИИ:
              1. Основной вопрос: "What worries you the most?"
              2. Инструкция: "You can choose several options"
              
              ТИПОГРАФИКА:
              - Заголовок: крупный шрифт Kreon, желтый цвет для акцента
              - Подзаголовок: меньший размер PT Sans, белый для читаемости
            */}
            <div className="absolute box-border content-stretch flex flex-col gap-5 items-start justify-start leading-[0] left-5 p-0 text-center top-[189px] w-[352px]">
              {/* Основной заголовок с разбивкой на строки */}
              <div className="font-['Kreon:Regular',_sans-serif] font-normal leading-[0.8] relative shrink-0 text-[#e1ff00] text-[36px] w-full">
                <p className="block mb-0">{t('survey.question').split(' ').slice(0, 3).join(' ') + ' '}</p>
                <p className="block">{t('survey.question').split(' ').slice(3).join(' ')}</p>
              </div>
              {/* Подзаголовок с инструкцией для пользователя */}
              <div className="font-['PT_Sans:Regular',_sans-serif] not-italic relative shrink-0 text-[#ffffff] text-[20px] w-full">
                <p className="block leading-none">{t('survey.hint')}</p>
              </div>
            </div>

            {/* === РАЗДЕЛИТЕЛЬНАЯ ЛИНИЯ === */}
            {/* 
              Горизонтальная линия для визуального разделения секций
              Помогает структурировать контент и улучшает читаемость
            */}
            <div className="absolute h-0 left-[21px] top-[307px] w-[351px]">
              <div className="absolute bottom-0 left-0 right-0 top-[-1px]">
                <svg className="block size-full" fill="none" preserveAspectRatio="none" viewBox="0 0 351 1">
                  <line stroke="#303030" x1="0" x2="351" y1="0.5" y2="0.500031"/>
                </svg>
              </div>
            </div>

            {/* === ИНТЕРАКТИВНЫЙ СПИСОК ПРОБЛЕМ === */}
            {/* 
              Основная функциональная область страницы
              
              ОСОБЕННОСТИ:
              - Вертикальный список всех доступных проблем
              - Каждый элемент рендерится через renderInteractiveSurveyItem
              - Поддержка множественного выбора
              - Динамическое обновление состояния при взаимодействии
              
              РАСПОЛОЖЕНИЕ:
              Центрирован по горизонтали с оптимальными отступами
            */}
            <div className="absolute box-border content-stretch flex flex-col gap-2.5 items-start justify-start left-[41px] p-0 top-[367px] w-[331px]">
              {/* Динамический рендеринг всех проблем */}
              {concerns.map((concern) => renderInteractiveSurveyItem(concern))}
            </div>

            {/* === КНОПКИ НАВИГАЦИИ === */}
            {/* 
              Нижняя панель с элементами управления навигацией
              
              СОСТАВ:
              1. Кнопка "Назад" (меньшая, квадратная)
              2. Кнопка "Далее" (основная, широкая)
              
              ФУНКЦИОНАЛЬНОСТЬ:
              - Возврат на предыдущую страницу
              - Переход к главной странице приложения
              - Интерактивные hover эффекты
            */}
            <div className="absolute box-border content-stretch flex flex-row gap-[21px] items-center justify-start left-[21px] p-0 top-[758px]">
              {/* === КНОПКА "НАЗАД" === */}
              <button
                onClick={handleBack}
                className="bg-[#e1ff00] h-[46px] relative rounded-xl shrink-0 w-[62px] hover:bg-[#d1ef00] transition-colors duration-200 active:scale-95"
                aria-label={t('navigation.back')}
              >
                <div className="flex flex-row items-center justify-center relative size-full">
                  <div className="font-['PT_Sans:Bold',_sans-serif] leading-[0] not-italic relative shrink-0 text-[#424040] text-[15px] text-center text-nowrap tracking-[-0.43px]">
                    <p className="adjustLetterSpacing block leading-[16px] whitespace-pre">&lt;</p>
                  </div>
                </div>
              </button>
              
              {/* === КНОПКА "ДАЛЕЕ" === */}
              <button
                onClick={handleNext}
                className="bg-[#e1ff00] box-border content-stretch flex flex-row gap-2.5 h-[46px] items-center justify-center px-[126px] py-[15px] relative rounded-xl shrink-0 w-[268px] hover:bg-[#d1ef00] transition-colors duration-200 active:scale-95"
                aria-label={t('navigation.next')}
              >
                <div className="font-['PT_Sans:Bold',_sans-serif] leading-[0] not-italic relative shrink-0 text-[#424040] text-[15px] text-center text-nowrap tracking-[-0.43px]">
                  <p className="adjustLetterSpacing block leading-[16px] whitespace-pre">{t('navigation.next')}</p>
                </div>
              </button>
            </div>
          </div>
        </div>
      )}

      {/* =====================================================================================
          СТРАНИЦА 2: ГЛАВНАЯ СТРАНИЦА ПРИЛОЖЕНИЯ
          ===================================================================================== */}
      {currentPage === 2 && (
        <div className="min-h-screen w-full overflow-y-auto overflow-x-hidden bg-[#111111] relative">
          {/* 
            ИМПОРТИРОВАННЫЙ КОМПОНЕНТ ГЛАВНОЙ СТРАНИЦЫ
            
            ОСОБЕННОСТИ ЭТОЙ СТРАНИЦЫ:
            -------------------------
            - min-h-screen: минимальная высота экрана (может быть больше)
            - overflow-y-auto: вертикальная прокрутка при необходимости
            - overflow-x-hidden: предотвращение горизонтальной прокрутки
            
            СОДЕРЖИМОЕ (из Component004HomeMainPage):
            ----------------------------------------
            1. Профиль пользователя с аватаром и статистикой
            2. Интерактивный слайдер настроения (HayouBlock)
            3. Блок активности с прогресс-индикаторами
            4. Карточки тем для работы (стресс, тревожность и т.д.)
            5. Горизонтальный слайдер экстренной помощи
            6. Социальные ссылки и дополнительные функции
            
            ИНТЕРАКТИВНОСТЬ:
            ---------------
            - Кликабельный профиль пользователя
            - Слайдер настроения с 5 позициями
            - Hover эффекты на карточках тем
            - Drag-and-drop навигация в слайдере помощи
            - Информационные подсказки и модальные окна
          */}
          <Component004HomeMainPage />
        </div>
      )}

      {/* =====================================================================================
          ИНДИКАТОР ТЕКУЩЕЙ СТРАНИЦЫ (NAVIGATION DOTS)
          ===================================================================================== */}
      {/* 
        Показывается только на первых двух страницах (онбординг и опрос)
        На главной странице скрыт, так как навигация там не требуется
        
        ЛОГИКА ОТОБРАЖЕНИЯ:
        ------------------
        - Отображается когда currentPage < 2
        - Скрывается на главной странице (currentPage === 2)
        
        ВИЗУАЛЬНОЕ ПРЕДСТАВЛЕНИЕ:
        ------------------------
        - 3 точки для трех страниц приложения
        - Активная точка: желтая (соответствует бренд-цвету)
        - Неактивные точки: темно-серые
        - Плавные анимации при переключении
        
        ПОЗИЦИОНИРОВАНИЕ:
        ----------------
        - Фиксированная позиция внизу экрана
        - Центрирование по горизонтали
        - Достаточный отступ от края для удобства
      */}
      {currentPage < 2 && (
        <div className="absolute bottom-[100px] left-1/2 transform -translate-x-1/2 flex gap-2">
          {/* Генерируем точки для всех страниц приложения */}
          {[0, 1, 2].map((pageIndex) => (
            <div
              key={pageIndex} // Уникальный ключ для каждой точки
              className={`w-2 h-2 rounded-full transition-colors duration-200 ${
                currentPage === pageIndex 
                  ? 'bg-[#e1ff00]'  // Активная страница - желтая точка (бренд-цвет)
                  : 'bg-[#424040]'  // Неактивная страница - темная точка
              }`}
              role="presentation" // Декоративный элемент для screen readers
              aria-hidden="true"  // Не читается вспомогательными технологиями
            />
          ))}
        </div>
      )}
    </div>
  );
}

/**
 * =====================================================================================
 * ДОПОЛНИТЕЛЬНЫЕ КОММЕНТАРИИ И ДОКУМЕНТАЦИЯ
 * =====================================================================================
 * 
 * ПРОИЗВОДИТЕЛЬНОСТЬ:
 * ------------------
 * 1. Условный рендеринг страниц предотвращает излишние вычисления
 * 2. Использование функциональных компонентов с hooks для оптимальной производительности
 * 3. Минимальные ререндеры благодаря правильному управлению состоянием
 * 4. Lazy loading можно добавить для больших компонентов в будущем
 * 
 * ACCESSIBILITY (Доступность):
 * ---------------------------
 * 1. Семантические HTML элементы (button, div с ролями)
 * 2. ARIA атрибуты для screen readers
 * 3. Keyboard navigation support
 * 4. Достаточные цветовые контрасты
 * 5. Описательные aria-label для всех интерактивных элементов
 * 
 * БЕЗОПАСНОСТЬ:
 * ------------
 * 1. Валидация входных данных через TypeScript
 * 2. Предотвращение XSS через правильное экранирование
 * 3. Безопасные обновления состояния через функциональные коллбеки
 * 
 * РАСШИРЯЕМОСТЬ:
 * -------------
 * 1. Модульная архитектура для легкого добавления новых страниц
 * 2. Конфигурируемые массивы данных (concerns)
 * 3. Переиспользуемые компоненты и функции
 * 4. Готовность к интеграции с внешними API
 * 
 * ВОЗМОЖНЫЕ УЛУЧШЕНИЯ:
 * -------------------
 * 1. Добавление анимаций переходов между страницами
 * 2. Сохранение прогресса в localStorage
 * 3. Интеграция с Telegram Web App API
 * 4. Добавление системы уведомлений
 * 5. Многоязычная поддержка (i18n)
 * 6. Темная/светлая тема
 * 7. Offline support с Service Workers
 */